{"ast":null,"code":"var _jsxFileName = \"/Users/krishnan/ai-demos/astra-ai-demo/src/components/AnswerSection.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnswerSection = _ref => {\n  let {\n    storedValues\n  } = _ref;\n  const copyText = text => {\n    navigator.clipboard.writeText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-container\",\n      children: storedValues.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question\",\n            children: value.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"answer\",\n            children: value.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-icon\",\n            onClick: () => copyText(value.answer),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = AnswerSection;\nexport default AnswerSection;\nvar _c;\n$RefreshReg$(_c, \"AnswerSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","AnswerSection","_ref","storedValues","copyText","text","navigator","clipboard","writeText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","question","answer","onClick","_c","$RefreshReg$"],"sources":["/Users/krishnan/ai-demos/astra-ai-demo/src/components/AnswerSection.jsx"],"sourcesContent":["import React from 'react'\n\nconst AnswerSection = ({ storedValues }) => {\n    const copyText = (text) => {\n        navigator.clipboard.writeText(text);\n    };\n\n    return (\n        <>\n            <hr className=\"hr-line\" />\n            {/* <div className=\"answer-section\">\n\t\t\t\t\t\t<p className=\"question\">{question}</p>\n\t\t\t\t\t\t<p className=\"answer\">{answer}</p>\n\t\t\t\t\t\t<div className=\"copy-icon\">\n\t\t\t\t\t\t\t<i className=\"fa-solid fa-copy\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n            <div className=\"answer-container\">\n                {storedValues.map((value, index) => {\n                    return (\n                        <div className=\"answer-section\" key={index}>\n                            <p className=\"question\">{value.question}</p>\n                            <p className=\"answer\">{value.answer}</p>\n                            <div\n                                className=\"copy-icon\"\n                                onClick={() => copyText(value.answer)}\n                            >\n                                <i className=\"fa-solid fa-copy\"></i>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default AnswerSection"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,aAAa,GAAGC,IAAA,IAAsB;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAD,IAAA;EACnC,MAAME,QAAQ,GAAIC,IAAI,IAAK;IACvBC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC;EACvC,CAAC;EAED,oBACIP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAIY,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAQ1BhB,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAC5BN,YAAY,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAChC,oBACInB,OAAA;UAAKY,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC3BX,OAAA;YAAGY,SAAS,EAAC,UAAU;YAAAD,QAAA,EAAEO,KAAK,CAACE;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5ChB,OAAA;YAAGY,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAAEO,KAAK,CAACG;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxChB,OAAA;YACIY,SAAS,EAAC,WAAW;YACrBU,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACY,KAAK,CAACG,MAAM,CAAE;YAAAV,QAAA,eAEtCX,OAAA;cAAGY,SAAS,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA,GAR2BG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASrC,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAAAO,EAAA,GAjCKpB,aAAa;AAmCnB,eAAeA,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}