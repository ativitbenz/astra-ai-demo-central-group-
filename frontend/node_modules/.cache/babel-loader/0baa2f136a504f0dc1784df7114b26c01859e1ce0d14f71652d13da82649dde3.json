{"ast":null,"code":"var _jsxFileName = \"/Users/krishnan/ai-demos/astra-ai-demo/src/App.js\",\n  _s = $RefreshSig$();\nimport { Configuration, OpenAIApi } from 'openai';\nimport FormSection from './components/FormSection';\nimport AnswerSection from './components/AnswerSection';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const [storedValues, setStoredValues] = useState([]);\n  const generateResponse = async (newQuestion, setNewQuestion) => {\n    let options = {\n      model: 'text-davinci-003',\n      temperature: 0,\n      max_tokens: 100,\n      top_p: 1,\n      frequency_penalty: 0.0,\n      presence_penalty: 0.0,\n      stop: ['/']\n    };\n    let completeOptions = {\n      ...options,\n      prompt: newQuestion\n    };\n    const response = await openai.createCompletion(completeOptions);\n    if (response.data.choices) {\n      setStoredValues([{\n        question: newQuestion,\n        answer: response.data.choices[0].text\n      }, ...storedValues]);\n      setNewQuestion('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vector search demo powered \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), storedValues.length < 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I am an automated question and answer system, designed to assist you in finding relevant information. You are welcome to ask me any queries you may have, and I will do my utmost to offer you a reliable response. Kindly keep in mind that I am a machine and operate solely based on programmed algorithms.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n      generateResponse: generateResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), storedValues.length > 0 && /*#__PURE__*/_jsxDEV(AnswerSection, {\n      storedValues: storedValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"Ot+oioh89jezi3f1OL6LdZ0683k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Configuration","OpenAIApi","FormSection","AnswerSection","useState","jsxDEV","_jsxDEV","App","_s","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","storedValues","setStoredValues","generateResponse","newQuestion","setNewQuestion","options","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","completeOptions","prompt","response","createCompletion","data","choices","question","answer","text","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/krishnan/ai-demos/astra-ai-demo/src/App.js"],"sourcesContent":["import { Configuration, OpenAIApi } from 'openai';\n\nimport FormSection from './components/FormSection';\nimport AnswerSection from './components/AnswerSection';\n\nimport { useState } from 'react';\n\nconst App = () => {\n\tconst configuration = new Configuration({\n\t\tapiKey: process.env.REACT_APP_OPENAI_API_KEY,\n\t});\n\n\tconst openai = new OpenAIApi(configuration);\n\n\tconst [storedValues, setStoredValues] = useState([]);\n\n\tconst generateResponse = async (newQuestion, setNewQuestion) => {\n\t\tlet options = {\n\t\t\tmodel: 'text-davinci-003',\n\t\t\ttemperature: 0,\n\t\t\tmax_tokens: 100,\n\t\t\ttop_p: 1,\n\t\t\tfrequency_penalty: 0.0,\n\t\t\tpresence_penalty: 0.0,\n\t\t\tstop: ['/'],\n\t\t};\n\n\t\tlet completeOptions = {\n\t\t\t...options,\n\t\t\tprompt: newQuestion,\n\t\t};\n\n\t\tconst response = await openai.createCompletion(completeOptions);\n\n\t\tif (response.data.choices) {\n\t\t\tsetStoredValues([\n\t\t\t\t{\n\t\t\t\t\tquestion: newQuestion,\n\t\t\t\t\tanswer: response.data.choices[0].text,\n\t\t\t\t},\n\t\t\t\t...storedValues,\n\t\t\t]);\n\t\t\tsetNewQuestion('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"header-section\">\n\t\t\t\t<h1>Vector search demo powered </h1>\n\t\t\t\t{storedValues.length < 1 && (\n\t\t\t\t\t<p>\n\t\t\t\t\t\tI am an automated question and answer system, designed to assist you\n\t\t\t\t\t\tin finding relevant information. You are welcome to ask me any\n\t\t\t\t\t\tqueries you may have, and I will do my utmost to offer you a\n\t\t\t\t\t\treliable response. Kindly keep in mind that I am a machine and\n\t\t\t\t\t\toperate solely based on programmed algorithms.\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<FormSection generateResponse={generateResponse} />\n\n\t\t\t{storedValues.length > 0 && <AnswerSection storedValues={storedValues} />}\n\t\t</div>\n\t);\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAEjD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,aAAa,GAAG,IAAIT,aAAa,CAAC;IACvCU,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;EACrB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,IAAIb,SAAS,CAACQ,aAAa,CAAC;EAE3C,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,cAAc,KAAK;IAC/D,IAAIC,OAAO,GAAG;MACbC,KAAK,EAAE,kBAAkB;MACzBC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE,CAAC;MACRC,iBAAiB,EAAE,GAAG;MACtBC,gBAAgB,EAAE,GAAG;MACrBC,IAAI,EAAE,CAAC,GAAG;IACX,CAAC;IAED,IAAIC,eAAe,GAAG;MACrB,GAAGR,OAAO;MACVS,MAAM,EAAEX;IACT,CAAC;IAED,MAAMY,QAAQ,GAAG,MAAMhB,MAAM,CAACiB,gBAAgB,CAACH,eAAe,CAAC;IAE/D,IAAIE,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MAC1BjB,eAAe,CAAC,CACf;QACCkB,QAAQ,EAAEhB,WAAW;QACrBiB,MAAM,EAAEL,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG;MAClC,CAAC,EACD,GAAGrB,YAAY,CACf,CAAC;MACFI,cAAc,CAAC,EAAE,CAAC;IACnB;EACD,CAAC;EAED,oBACCb,OAAA;IAAA+B,QAAA,gBACC/B,OAAA;MAAKgC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC9B/B,OAAA;QAAA+B,QAAA,EAAI;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnC3B,YAAY,CAAC4B,MAAM,GAAG,CAAC,iBACvBrC,OAAA;QAAA+B,QAAA,EAAG;MAMH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAENpC,OAAA,CAACJ,WAAW;MAACe,gBAAgB,EAAEA;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAElD3B,YAAY,CAAC4B,MAAM,GAAG,CAAC,iBAAIrC,OAAA,CAACH,aAAa;MAACY,YAAY,EAAEA;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAER,CAAC;AAAClC,EAAA,CA3DID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA6DT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}